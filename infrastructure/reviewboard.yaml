Description: >
     This cloudfomation script will create and configure an ec2 instances and run jenkins inside it.

Parameters:
   InstanceType:
      Description: 'WebServer EC2 instance type'
      Type: 'String'
      Default: 't2.small'
      ConstraintDescription: 'must be a valid EC2 instance type.'

Resources:
   Ec2Instances:
      Type: "AWS::EC2::Instance"
      Properties:
        ImageId: "ami-050bc013"
        KeyName: "techgig"
        InstanceType: !Ref InstanceType
        AvailabilityZone: "us-east-1a"
        SecurityGroupIds: [!GetAtt SSHSecurityGroup.GroupId]
        SubnetId: !Ref ReviewBoardSubnet
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            yum update -y
            yum install git -y
            pip install docker-compose
            cd /opt && git clone https://github.com/ikatson/docker-reviewboard.git
            sleep 10
            /usr/local/bin/docker-compose -f /opt/docker-reviewboard/docker-compose.yml up -d


#        BlockDeviceMappings:
##          -
##            DeviceName: "/dev/sda1"
##            Ebs:
##              VolumeSize: "50"
##          -
#          - DeviceName: "/dev/sdm"
#            Ebs:
#               VolumeType: "io1"
#               Iops: "200"
#               DeleteOnTermination: "false"
#               VolumeSize: "20"
#          - DeviceName: "/dev/sdk"
#            NoDevice: {}
   MyEIP:
      Type: "AWS::EC2::EIP"
      Properties:
        InstanceId: !Ref Ec2Instances

   SSHSecurityGroup:
      Type: "AWS::EC2::SecurityGroup"
      Properties:
        VpcId: !Ref ReviewBoardVPC
        GroupDescription: "Enable SSH access via port 22"
        SecurityGroupIngress:
            -
              CidrIp: "0.0.0.0/0"
              FromPort: "22"
              IpProtocol: "tcp"
              ToPort: "22"
            -
              CidrIp: "0.0.0.0/0"
              FromPort: "8000"
              IpProtocol: -1
              ToPort: "8000"

   ReviewBoardVPC:
      Type: "AWS::EC2::VPC"
      Properties:
        CidrBlock: "10.0.0.0/16"
        Tags:
           - Key: "Name"
             Value: "ReviewBoard VPC"

   ReviewBoardSubnet:
      Type: "AWS::EC2::Subnet"
      Properties:
        VpcId: !Ref ReviewBoardVPC
        AvailabilityZone: "us-east-1a"
        CidrBlock: "10.0.1.0/24"
        MapPublicIpOnLaunch: true
        Tags:
           - Key: "Name"
             Value: "ReviewBoard Subnet"

   InternetGateway:
      Type: "AWS::EC2::InternetGateway"
      DependsOn: ReviewBoardVPC
      Properties:
        Tags:
          - Key: "Name"
            Value: "ReviewBoard IgW"

   InternetGatewayAttachment:
      Type: "AWS::EC2::VPCGatewayAttachment"
      DependsOn: InternetGateway
      Properties:
         InternetGatewayId: !Ref InternetGateway
         VpcId: !Ref ReviewBoardVPC


   ReviewBoardRouteTable:
      Type: "AWS::EC2::RouteTable"
      Properties:
         VpcId: !Ref ReviewBoardVPC
         Tags:
            - Key: "Name"
              Value: "ReviewBoard Route Table"

   DefaultPublicRoute:
      Type: "AWS::EC2::Route"
      DependsOn: InternetGatewayAttachment
      Properties:
         RouteTableId: !Ref ReviewBoardRouteTable
         DestinationCidrBlock: "0.0.0.0/0"
         GatewayId: !Ref InternetGateway

   PublicSubnet1RouteTableAssociation:
      Type: "AWS::EC2::SubnetRouteTableAssociation"
      Properties:
         RouteTableId: !Ref ReviewBoardRouteTable
         SubnetId: !Ref ReviewBoardSubnet
